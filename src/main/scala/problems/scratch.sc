package problems


object scratch {

val threeDigits = 100 to 999                      //> threeDigits  : scala.collection.immutable.Range.Inclusive = Range(100, 101, 1
                                                  //| 02, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117
                                                  //| , 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 
                                                  //| 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 14
                                                  //| 8, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
                                                  //|  164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 1
                                                  //| 79, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194
                                                  //| , 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 
                                                  //| 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 22
                                                  //| 5, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
                                                  //|  241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 2
                                                  //| 56, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271
                                                  //| , 272, 273, 274, 275, 276
                                                  //| Output exceeds cutoff limit.
    val products = for {
      x <- threeDigits
      y <- threeDigits
      val product = x * y
      if (product.toString == product.toString.reverse)
    } yield product                               //> products  : scala.collection.immutable.IndexedSeq[Int] = Vector(10201, 11211
                                                  //| , 12221, 13231, 14241, 15251, 16261, 17271, 18281, 19291, 20402, 21412, 2242
                                                  //| 2, 23432, 24442, 25452, 26462, 27472, 28482, 29492, 30603, 31613, 32623, 336
                                                  //| 33, 34643, 35653, 36663, 37673, 38683, 39693, 40804, 41814, 42824, 43834, 44
                                                  //| 844, 45854, 46864, 47874, 48884, 49894, 20502, 21012, 41514, 42024, 62526, 6
                                                  //| 3036, 83538, 84048, 21012, 26162, 42024, 47174, 63036, 68186, 84048, 89198, 
                                                  //| 21112, 27872, 42224, 48984, 63336, 80808, 84448, 88088, 50505, 53235, 55755,
                                                  //|  58485, 21412, 23532, 25652, 27772, 29892, 40704, 42824, 44944, 25252, 45154
                                                  //| , 65056, 73937, 93839, 27972, 29592, 46764, 48384, 63936, 65556, 67176, 8272
                                                  //| 8, 84348, 15151, 64746, 74447, 79897, 84148, 89598, 99299, 11211, 12321, 134
                                                  //| 31, 14541, 15651, 16761, 17871, 18981, 20202, 21312, 22422, 23532, 24642, 25
                                                  //| 752, 26862, 27972, 30303, 31413, 32523, 33633, 34743, 35853, 36963, 40404, 4
                                                  //| 1514, 42624, 43734, 4484
                                                  //| Output exceeds cutoff limit.
   products.max                                   //> res0: Int = 906609


	
	
}