package org.projecteuler;

/*
 * The sequence of triangle numbers is generated by adding the natural numbers.
 * So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first
 * ten terms would be:
 *
 * 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
 *
 * Let us list the factors of the first seven triangle numbers:
 *
 * 1: 1 
 * 3: 1,3 
 * 6: 1,2,3,6 
 * 10: 1,2,5,10 
 * 15: 1,3,5,15 
 * 21: 1,3,7,21 
 * 28: 1,2,4,7,14,28
 *
 * We can see that 28 is the first triangle number to have over five divisors.
 *
 * What is the value of the first triangle number to have over five hundred
 * divisors?
 *
 */
public class Problem_0012 {

    private static int solve() {
        int count = 1;
        int triangle = 1;

        while (calcDivisorCount(triangle) < 500) {
            triangle += ++count;
        }
        
        return triangle;
        
    }

    private static int calcDivisorCount(int triangle) {
        int numDivisors = 0;
        int currentDiv = 1;
        
        while (currentDiv <= Math.sqrt(triangle)) {
            if (triangle % currentDiv == 0) {
                numDivisors++;
            }
            
            currentDiv++;
        }
        
        return numDivisors * 2;
    }
    

    public static void main(String... args) {
        long start = System.currentTimeMillis();
        System.out.println(solve());
        System.out.println(System.currentTimeMillis() - start);
    }
}
